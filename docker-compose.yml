version: "3"
services:
  postgres:
    image: library/postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "6432:5432"

  tickets-service:
    build: ./tickets-service
    image: tickets-service:latest
    container_name: tickets-service
    environment:
      DATABASE_URL: "postgresql://program:test@postgres:5432/tickets?schema=public"
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  films-service:
    build: ./films-service
    image: films-service:latest
    container_name: films-service
    environment:
      DATABASE_URL: "postgresql://program:test@postgres:5432/films?schema=public"
    ports:
      - "8070:8070"
    depends_on:
      postgres:
        condition: service_healthy

  cinema-service:
    build: ./cinema-service
    image: cinema-service:latest
    container_name: cinema-service
    environment:
      DATABASE_URL: "postgresql://program:test@postgres:5432/cinema?schema=public"
    ports:
      - "8060:8060"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  db-data:
